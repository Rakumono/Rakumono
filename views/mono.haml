
- if @monos != nil
  - @monos.each do |mono|
    %input{:type=>"hidden", :name=>"keyword", :value => mono }
#monolist.section
  - if @searchinfo != nil
    - @searchinfo['shops'].each do |shop|
      .slide
        .container
          .row
            .col-lg-12.mono-container
              .title 
                %h1 
                  = shop['shopName']
              .category-list.renderable{:id => shop['shopCode']}
                %img.loading_img(src="/images/loading.gif")
  
:javascript
  var url = "http://localhost:9292/item";
  
  //alert($("input[name='keyword']").eq(0).val());
  
  
  
  $(document).ready(function() {
  function remove_loading(id) {
  $("#" + id + " > .loading_img").remove();
  //alert(id);
  }
  
  function get_shop_mono(id, keyword, mono_num, last) {
  //alert("SB");
  $.ajax( {
  url: url,
  type: 'get',
  data: {shopname: id, keyword: keyword, item_num: mono_num},
  dataType: 'json',
  success: function(data) {
  var cate_template = '<h2 class="category-title">{::keyword::}</h2><div class="mono-list">{::monobox::}<div class="clear"></div></div>';
  var mono_template = '<div class="mono-box"><a class="mono-avater" href="{::itemUrl::}"><img src=""><div class="mono-price-corner"><span class="mono-price">{::itemPrice::} YEN</span><span class="mono-price">&nbsp;&nbsp;|&nbsp;&nbsp;</span><span class="mono-point">Point by {::itemPoint::}</span></div></a><div class="mono-info"><div class="mono-title"><a href="{::itemUrl::}">{::itemName::}</a></div><div class="mono-rank"><span>Rank: {::reviewAverage::}</span>&nbsp; &nbsp;<span>Reviews: {::reviewCount::}</span></div></div></div>';
  //alert(data['item']['itemName']);
  var str = "";
  var items = data['item'];
  //for (var i = 0; i < items.length; i ++) {
  var t = mono_template;
  
  str += t.replace(/{::itemUrl::}/g, items['itemUrl']).replace(/{::itemPrice::}/g, items['itemPrice'])
  .replace(/{::itemPoint::}/g, items['itemPoint']).replace(/{::itemName::}/g, items['itemName'])
  .replace(/{::reviewAverage::/g, items['reviewAverage']).replace(/{::reviewCount::}/g, items['reviewCount']);
  //}
  var result = cate_template.replace(/{::keyword::}/g, keyword).replace(/{::monobox::}/g , str);
  //alert(result);
  $("#" +id ).append(result);
  if (last) {
  remove_loading(id);
  }
  }
  });
  
  }

  
  $('#monolist').fullpage( {
  scrollOverflow: true
  });
  
  
  var index = 0;
  $('.renderable').each(function() {
  if (index ++ < 3) {
  var id = $(this).attr('id');
  var count = 0;
  var key_total = $("input[name='keyword']").length;
  $("input[name='keyword']").each(function (){
  //alert($(this).val());
  if (++count <  key_total) {
  get_shop_mono(id, $(this).val(), 1, false);
  } else {
  get_shop_mono(id, $(this).val(), 1, true);
  }
  });
  
  }
  });
  
  });
  
